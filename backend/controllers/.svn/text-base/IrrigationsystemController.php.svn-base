<?php

namespace backend\controllers;

use Yii;
use backend\models\Irrigationsystem;
use app\models\IrrigationSystemSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * IrrigationsystemController implements the CRUD actions for Irrigationsystem model.
 */
class IrrigationsystemController extends Controller
{

    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['post'],
            ],
                ],
        ];
    }

    /**
     * Lists all Irrigationsystem models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new IrrigationSystemSearch();
        $model = new Irrigationsystem();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);
        $this->layout = 'mainsubadmin';

//        print_r($Field);die;
        return $this->render('index', [
                    'searchModel' => $searchModel,
                    'dataProvider' => $dataProvider,
                ]);
    }

    /**
     * Displays a single Irrigationsystem model.
     * @param integer $id
     * @return mixed
     */
    public function actionView($id)
    {
        return $this->render('view', [
                    'model' => $this->findModel($id),
                ]);
    }

    /**
     * Creates a new Irrigationsystem model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new Irrigationsystem();
        $this->layout = 'mainsubadmin';

        $model->scenario = 'create';
        
        if ($model->load(Yii::$app->request->post()) && $model->validate())
        {
          
            $model->irrigationAddedDate = Date('Y-m-d');
            $model->fkFarmID = Yii::$app->user->id;
            $model->fkFieldID = (int)$_POST['Irrigationsystem']['fkFieldID'];
            if (Yii::$app->user->identity->Adminlevel == '0')
            {
                $model->fkParentID = Yii::$app->user->id;
            }
            else
            {
                $model->fkParentID = Yii::$app->user->identity->fkUserID;
            }
            if ($model->save())
            {
                Yii::$app->session->setFlash('create', true);
                return $this->redirect(['index']);
            }
            else
            {
                return $this->render('create', [
                            'model' => $model,
                            'field' => $model->getFieldList(),
                                // 'farm' => $model->getFarmList()
                        ]);
            }
        }
        else
        {
//            $Field=$model->getFieldList();
            return $this->render('create', [
                        'model' => $model,
                        'field' => $model->getFieldList(),
                            //'farm' => $model->getFarmList()
                    ]);
        }
    }

    /**
     * Updates an existing Irrigationsystem model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);
        $this->layout = 'mainsubadmin';
        $model->scenario = 'update';
        if ($model->load(Yii::$app->request->post()) && $model->validate() && $model->save())
        {
            Yii::$app->session->setFlash('update', true);
            return $this->redirect(['index']);
        }
        else
        {
            return $this->render('update', [
                        'model' => $model,
                        'field' => $model->getFieldList(),
                        'farm' => $model->getFarmList()
                    ]);
        }
    }

    /**
     * Deletes an existing Irrigationsystem model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();
        Yii::$app->session->setFlash('delete', true);
        return $this->redirect(['index']);
    }

    /**
     * Finds the Irrigationsystem model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Irrigationsystem the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Irrigationsystem::findOne($id)) !== null)
        {
            return $model;
        }
        else
        {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }

    /**
     * This action perform multiple delete operation on ajax call
     */
    public function actionMultipledelete()
    {
        $postArr = Yii::$app->request->post();

        if (count($postArr['id']) > 0)
        {
            foreach ($postArr['id'] as $id)
            {
                $model = $this->findModel($id);
                $model->delete();
            }
        }
        return "Deleted";
    }

}
